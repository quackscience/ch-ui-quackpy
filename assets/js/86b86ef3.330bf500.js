"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[337],{5980:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=s(4848),a=s(8453);const i={sidebar_position:3},r="CH-UI Core",o={id:"core_concepts",title:"CH-UI Core",description:"1. Application State Management",source:"@site/docs/core_concepts.md",sourceDirName:".",slug:"/core_concepts",permalink:"/ch-ui/docs/core_concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/caioricciuti/ch-ui/edit/main/docs/core_concepts.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Getting Started \ud83d\ude80",permalink:"/ch-ui/docs/getting-started"},next:{title:"Contributing \ud83d\ude4c",permalink:"/ch-ui/docs/contributing"}},l={},c=[{value:"1. Application State Management",id:"1-application-state-management",level:2},{value:"Key Features:",id:"key-features",level:3},{value:"2. Workspace and Tabs",id:"2-workspace-and-tabs",level:2},{value:"Key Features:",id:"key-features-1",level:3},{value:"3. Database Explorer",id:"3-database-explorer",level:2},{value:"Key Features:",id:"key-features-2",level:3},{value:"4. Query Execution and Big Data Handling",id:"4-query-execution-and-big-data-handling",level:2},{value:"Key Aspects:",id:"key-aspects",level:3},{value:"Big Data Handling Strategies:",id:"big-data-handling-strategies",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ch-ui-core",children:"CH-UI Core"})}),"\n",(0,t.jsx)(n.h2,{id:"1-application-state-management",children:"1. Application State Management"}),"\n",(0,t.jsx)(n.p,{children:"CH-UI utilizes Zustand for efficient and straightforward state management. The central state store forms the backbone of the application's data flow."}),"\n",(0,t.jsx)(n.h3,{id:"key-features",children:"Key Features:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ClickHouse Client Integration"}),": A ClickHouse client instance is maintained in the state, facilitating seamless communication with the ClickHouse server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Credential Management"}),": User credentials for ClickHouse are securely stored and managed within the state."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Workspace Persistence"}),": The current state of all open tabs and workspaces is maintained, enabling a persistent and responsive user interface."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"State updates are performed using actions defined in the store, allowing components to easily access and modify the application state. This centralized approach ensures consistency across the application and simplifies data flow management."}),"\n",(0,t.jsx)(n.h2,{id:"2-workspace-and-tabs",children:"2. Workspace and Tabs"}),"\n",(0,t.jsx)(n.p,{children:"The CH-UI workspace is built around a flexible tab system, allowing users to manage multiple queries or views simultaneously."}),"\n",(0,t.jsx)(n.h3,{id:"key-features-1",children:"Key Features:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Tab Creation"}),": Users can create new tabs for various content types (SQL queries, information views, etc.)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tab Persistence"}),": Tabs are persisted using IndexedDB, allowing work recovery across sessions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tab Management"}),": Users can reorder, rename, and close tabs as needed."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This tab system provides a familiar and efficient interface for users to organize their work. It allows for multitasking and easy navigation between different queries or database views, enhancing productivity in database management tasks."}),"\n",(0,t.jsx)(n.h2,{id:"3-database-explorer",children:"3. Database Explorer"}),"\n",(0,t.jsx)(n.p,{children:"The Database Explorer provides a hierarchical view of ClickHouse databases and tables, enhancing navigation and data discovery."}),"\n",(0,t.jsx)(n.h3,{id:"key-features-2",children:"Key Features:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tree Structure"}),": Databases and tables are displayed in an expandable tree structure."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Search Functionality"}),": Users can search for specific databases or tables."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Real-time Refresh"}),": The explorer can be refreshed to fetch the latest database structure."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This component serves as the primary navigation tool for users to explore their ClickHouse databases. It provides an intuitive interface for users to understand the structure of their data and quickly access specific tables or databases."}),"\n",(0,t.jsx)(n.h2,{id:"4-query-execution-and-big-data-handling",children:"4. Query Execution and Big Data Handling"}),"\n",(0,t.jsx)(n.p,{children:"Query execution is a core feature of CH-UI, designed to handle large datasets efficiently."}),"\n",(0,t.jsx)(n.h3,{id:"key-aspects",children:"Key Aspects:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Query Execution"}),": Queries are sent to the ClickHouse server using the ",(0,t.jsx)(n.code,{children:"@clickhouse/client-web"})," library."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Result Processing"}),": Query results are processed and stored in the application state or IndexedDB, depending on their size."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Large Dataset Management"}),": CH-UI uses a combination of chunked data retrieval, IndexedDB storage, and virtualized rendering for efficient big data handling."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"big-data-handling-strategies",children:"Big Data Handling Strategies:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Chunked Data Retrieval"}),":\nLarge query results are retrieved in manageable chunks to prevent memory overflow. This allows the application to handle queries that return massive datasets without overwhelming the browser's memory."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"IndexedDB for Large Datasets"}),":\nQuery results exceeding a size threshold are stored in IndexedDB instead of in-memory state. This strategy enables the application to work with datasets that are too large to fit in memory, providing a seamless experience even with big data."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Virtualized Rendering"}),":\nLarge datasets are rendered using virtualization techniques, displaying only the visible portion of the data. This significantly improves performance when dealing with tables containing thousands or millions of rows."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"By implementing these strategies, CH-UI provides a robust solution for working with big data in a web-based ClickHouse client. Users can execute complex queries on large datasets and interact with the results smoothly, making it suitable for data analysis and exploration tasks on substantial ClickHouse databases."}),"\n",(0,t.jsx)(n.p,{children:"These core concepts work together to create a powerful, efficient, and user-friendly interface for ClickHouse database management. The application's architecture ensures smooth handling of large datasets, responsive user interactions, and persistent workspace management, catering to the needs of data professionals working with ClickHouse databases."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(6540);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);